FWD_START_TEST([rich rule limit])
AT_KEYWORDS(rich rhbz2181406)

FWD_CHECK([--add-rich-rule='rule family=ipv4 source address=10.10.10.10 service name=ssh log limit value="2/d"'], 0, [ignore])
FWD_CHECK([--add-rich-rule='rule family=ipv6 destination address=fc00::10:10:10:10 service name=ssh audit limit value="5/m" accept'], 0, [ignore])

FWD_CHECK([--add-rich-rule='rule family=ipv4 source address=10.10.10.10 service name=http accept limit value="2/d"'], 0, [ignore])
FWD_CHECK([--add-rich-rule='rule family=ipv6 destination address=fc00::10:10:10:10 service name=http accept limit value="5/m"'], 0, [ignore])

dnl The generated rule order matters for nftables as it evaluates left to right
NFT_LIST_RULES([inet], [filter_IN_public_log], 0, [dnl
table inet firewalld {
    chain filter_IN_public_log {
        ip saddr 10.10.10.10 tcp dport 22 limit rate 2/day log
        ip6 daddr fc00::10:10:10:10 tcp dport 22 limit rate 5/minute log level audit
    }
}
])
NFT_LIST_RULES([inet], [filter_IN_public_allow], 0, [dnl
table inet firewalld {
    chain filter_IN_public_allow {
        tcp dport 22 accept
        ip6 daddr fe80::/64 udp dport 546 accept
        ip6 daddr fc00::10:10:10:10 tcp dport 22 accept
        ip saddr 10.10.10.10 tcp dport 80 limit rate 2/day accept
        ip6 daddr fc00::10:10:10:10 tcp dport 80 limit rate 5/minute accept
    }
}
])

IPTABLES_LIST_RULES([filter], [IN_public_log], 0, [dnl
LOG 6 -- 10.10.10.10 0.0.0.0/0 tcp dpt:22 limit: avg 2/day burst 5 LOG flags 0 level 4
])
IPTABLES_LIST_RULES([filter], [IN_public_allow], 0, [dnl
ACCEPT 6 -- 0.0.0.0/0 0.0.0.0/0 tcp dpt:22
ACCEPT 6 -- 10.10.10.10 0.0.0.0/0 tcp dpt:80 limit: avg 2/day burst 5
])

IP6TABLES_LIST_RULES([filter], [IN_public_log], 0, [dnl
AUDIT 6 -- ::/0 fc00::10:10:10:10 tcp dpt:22 limit: avg 5/min burst 5 AUDIT accept
])
IP6TABLES_LIST_RULES([filter], [IN_public_allow], 0, [dnl
ACCEPT 6 -- ::/0 ::/0 tcp dpt:22
ACCEPT 17 -- ::/0 fe80::/64 udp dpt:546
ACCEPT 6 -- ::/0 fc00::10:10:10:10 tcp dpt:22
ACCEPT 6 -- ::/0 fc00::10:10:10:10 tcp dpt:80 limit: avg 5/min burst 5
])

FWD_END_TEST()
