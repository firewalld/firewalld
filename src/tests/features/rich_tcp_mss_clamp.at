dnl ###############
dnl ## XML tests ##
dnl ###############

FWD_START_TEST([tcp-mss-clamp])
AT_KEYWORDS(tcp-mss-clamp gh1121)

AT_CHECK([mkdir -p ./zones])

AT_DATA([./zones/tcp.xml], [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <service name="dhcpv6-client"/>
  <rule>
    <tcp-mss-clamp value="536"/>
  </rule>
</zone>
])
FWD_CHECK([--check-config],0, ignore)

AT_DATA([./zones/tcp.xml], [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <service name="dhcpv6-client"/>
  <rule>
    <tcp-mss-clamp value="pmtu"/>
  </rule>
</zone>
])
FWD_CHECK([--check-config],0, ignore)

AT_DATA([./zones/tcp.xml], [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <service name="dhcpv6-client"/>
  <rule>
    <tcp-mss-clamp value="thisdoesnotexist"/>
  </rule>
</zone>
])
FWD_CHECK([--check-config], 122, ignore, ignore)

AT_DATA([./zones/tcp.xml], [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <service name="dhcpv6-client"/>
  <rule>
    <tcp-mss-clamp/>
  </rule>
</zone>
])
FWD_CHECK([--check-config], 0, ignore,ignore)

dnl github #1121
dnl
AT_DATA([./zones/tcp.xml], [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <rule>
    <tcp-mss-clamp value="None"/>
  </rule>
</zone>
])
FWD_CHECK([--check-config], 0, [ignore], [ignore])
FWD_OFFLINE_CHECK([--zone tcp --add-service http], 0, [ignore])
AT_CHECK([cat ./zones/tcp.xml], 0, [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <service name="http"/>
  <rule>
    <tcp-mss-clamp/>
  </rule>
</zone>
])

dnl start cli tests (permanent configuration)
AT_CHECK(rm ./zones/tcp.xml)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp value=thisdoesnotexist'],122,ignore,ignore)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp'],0,ignore, ignore)
dnl github #1121
dnl
AT_CHECK([cat ./zones/public.xml], 0, [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <short>Public</short>
  <description>For use in public areas. You do not trust the other computers on networks to not harm your computer. Only selected incoming connections are accepted.</description>
  <service name="ssh"/>
  <service name="dhcpv6-client"/>
  <rule>
    <tcp-mss-clamp/>
  </rule>
  <forward/>
</zone>
])
FWD_CHECK([--permanent --remove-rich-rule='rule tcp-mss-clamp'],0,ignore, ignore)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp value=0'],122,ignore, ignore)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp value=536'],0,ignore, ignore)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp value=pmtu'],0,ignore, ignore)

dnl start runtime tests for tcp/mss clamp
FWD_CHECK([--add-rich-rule='rule tcp-mss-clamp value=0'],122,ignore, ignore)
FWD_CHECK([--add-rich-rule='rule tcp-mss-clamp'],0,ignore, ignore)
FWD_CHECK([--query-rich-rule='rule tcp-mss-clamp'],0,ignore, ignore)
FWD_CHECK([--remove-rich-rule='rule tcp-mss-clamp'],0,ignore, ignore)
FWD_CHECK([--add-rich-rule='rule tcp-mss-clamp value=536'],0,ignore, ignore)
FWD_CHECK([--add-rich-rule='rule tcp-mss-clamp value=thisdoesnotexist'],122,ignore,ignore)
FWD_CHECK([--add-rich-rule='rule tcp-mss-clamp value=pmtu accept'],122,ignore, ignore)
FWD_CHECK([--add-rich-rule='rule tcp-mss-clamp value=pmtu'],0,ignore, ignore)

NFT_LIST_RULES([inet], [filter_FWD_public_allow], 0, [dnl
        table inet firewalld {
        chain filter_FWD_public_allow {
        tcp flags syn tcp option maxseg size set 536
        tcp flags syn tcp option maxseg size set rt mtu
        }
        }
    ])

IPTABLES_LIST_RULES([filter], [FWD_public_allow], 0, [dnl
    TCPMSS 6 -- 0.0.0.0/0 0.0.0.0/0 tcp flags:0x06/0x02 TCPMSS set 536
    TCPMSS 6 -- 0.0.0.0/0 0.0.0.0/0 tcp flags:0x06/0x02 TCPMSS clamp to PMTU
    ])

IP6TABLES_LIST_RULES([filter], [FWD_public_allow], 0, [dnl
    TCPMSS 6 -- ::/0 ::/0 tcp flags:0x06/0x02 TCPMSS set 536
    TCPMSS 6 -- ::/0 ::/0 tcp flags:0x06/0x02 TCPMSS clamp to PMTU
    ])

FWD_END_TEST([ignore])
