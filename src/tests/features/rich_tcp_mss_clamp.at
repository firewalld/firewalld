dnl ###############
dnl ## XML tests ##
dnl ###############

FWD_START_TEST([tcp-mss-clamp])
AT_KEYWORDS(tcp-mss-clamp)

AT_CHECK([mkdir -p ./zones])

AT_DATA([./zones/tcp.xml], [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <service name="dhcpv6-client"/>
  <rule>
    <tcp-mss-clamp value="536"/>
    <accept/>
  </rule>
</zone>
])
FWD_CHECK([--check-config],0, ignore)

AT_DATA([./zones/tcp.xml], [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <service name="dhcpv6-client"/>
  <rule>
    <tcp-mss-clamp value="pmtu"/>
    <accept/>
  </rule>
</zone>
])
FWD_CHECK([--check-config],0, ignore)

AT_DATA([./zones/tcp.xml], [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <service name="dhcpv6-client"/>
  <rule>
    <tcp-mss-clamp value="thisdoesnotexist"/>
    <accept/>
  </rule>
</zone>
])
m4_ifdef([TESTING_FIREWALL_OFFLINE_CMD], [FWD_CHECK([--check-config], 0, ignore, [dnl
WARNING: INVALID_RULE: thisdoesnotexist: rule tcp-mss-clamp value="thisdoesnotexist" accept
WARNING: INVALID_RULE: thisdoesnotexist: rule tcp-mss-clamp value="thisdoesnotexist" accept
])], [FWD_CHECK([--check-config], 0, ignore, [dnl
])])

AT_DATA([./zones/tcp.xml], [dnl
<?xml version="1.0" encoding="utf-8"?>
<zone>
  <service name="ssh"/>
  <service name="dhcpv6-client"/>
  <rule>
    <tcp-mss-clamp/>
    <accept/>
  </rule>
</zone>
])
m4_ifdef([TESTING_FIREWALL_OFFLINE_CMD], [FWD_CHECK([--check-config], 2, ignore,ignore)], 
[FWD_CHECK([--check-config],254, ignore, ignore)])

dnl start cli tests (permanent configuration)
AT_DATA(rm ./zones/tcp.xml)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp value=thisdoesnotexist accept'],122,ignore,ignore)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp accept'],122,ignore, ignore)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp value=0 accept'],122,ignore, ignore)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp value=536 accept'],0,ignore, ignore)
FWD_CHECK([--permanent --add-rich-rule='rule tcp-mss-clamp value=pmtu accept'],0,ignore, ignore)
FWD_END_TEST([ignore])
