FWD_START_TEST([rpfilter - strict])
AT_KEYWORDS(rpfilter)
CHECK_NFTABLES_FIB()

AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=strict/' ./firewalld.conf])
FWD_RELOAD()

NFT_LIST_RULES([inet], [filter_PREROUTING], 0, [dnl
    table inet firewalld {
        chain filter_PREROUTING {
            icmpv6 type { nd-router-advert, nd-neighbor-solicit } accept
            meta nfproto ipv6 fib saddr . mark . iif oif missing drop
        }
    }
])

IP6TABLES_LIST_RULES([mangle], [PREROUTING], 0, [dnl
    ACCEPT 58 -- ::/0 ::/0 ipv6-icmptype 134
    ACCEPT 58 -- ::/0 ::/0 ipv6-icmptype 135
    DROP 0 -- ::/0 ::/0 rpfilter validmark invert
    PREROUTING_direct 0 -- ::/0 ::/0
    PREROUTING_POLICIES 0 -- ::/0 ::/0
])

FWD_END_TEST()

FWD_START_TEST([rpfilter - loose])
AT_KEYWORDS(rpfilter)
CHECK_NFTABLES_FIB()

AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=loose/' ./firewalld.conf])
FWD_RELOAD()

NFT_LIST_RULES([inet], [filter_PREROUTING], 0, [dnl
    table inet firewalld {
        chain filter_PREROUTING {
            icmpv6 type { nd-router-advert, nd-neighbor-solicit } accept
            meta nfproto ipv6 fib saddr . mark oif missing drop
        }
    }
])

IP6TABLES_LIST_RULES([mangle], [PREROUTING], 0, [dnl
    ACCEPT 58 -- ::/0 ::/0 ipv6-icmptype 134
    ACCEPT 58 -- ::/0 ::/0 ipv6-icmptype 135
    DROP 0 -- ::/0 ::/0 rpfilter loose validmark invert
    PREROUTING_direct 0 -- ::/0 ::/0
    PREROUTING_POLICIES 0 -- ::/0 ::/0
])

FWD_END_TEST()

FWD_START_TEST([rpfilter - strict-forward])
AT_KEYWORDS(rpfilter)
CHECK_NFTABLES_FIB()
CHECK_NFTABLES_FIB_IN_FORWARD()

AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=strict-forward/' ./firewalld.conf])
m4_if(iptables, FIREWALL_BACKEND, [
FWD_RELOAD(114, [ignore], [ignore])
], [
FWD_RELOAD()
])

NFT_LIST_RULES([inet], [filter_FORWARD], 0, [dnl
    table inet firewalld {
        chain filter_FORWARD {
            meta nfproto ipv6 fib saddr . mark . iif oif missing drop
            ct state established,related accept
            ct status dnat accept
            iifname "lo" accept
            ct state invalid drop
            ip6 daddr { ::/96, ::ffff:0.0.0.0/96, 2002::/24, 2002:a00::/24, 2002:7f00::/24, 2002:a9fe::/32, 2002:ac10::/28, 2002:c0a8::/32, 2002:e000::/19 } reject with icmpv6 addr-unreachable
            jump filter_FORWARD_POLICIES
            reject with icmpx admin-prohibited
        }
    }
])

NFT_LIST_RULES([inet], [filter_PREROUTING], 0, [dnl
    table inet firewalld {
        chain filter_PREROUTING {
        }
    }
])

FWD_END_TEST([-e "/^ERROR: INVALID_VALUE:/d"])

FWD_START_TEST([rpfilter - loose-forward])
AT_KEYWORDS(rpfilter)
CHECK_NFTABLES_FIB()
CHECK_NFTABLES_FIB_IN_FORWARD()

AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=loose-forward/' ./firewalld.conf])
m4_if(iptables, FIREWALL_BACKEND, [
FWD_RELOAD(114, [ignore], [ignore])
], [
FWD_RELOAD()
])

NFT_LIST_RULES([inet], [filter_FORWARD], 0, [dnl
    table inet firewalld {
        chain filter_FORWARD {
            meta nfproto ipv6 fib saddr . mark oif missing drop
            ct state established,related accept
            ct status dnat accept
            iifname "lo" accept
            ct state invalid drop
            ip6 daddr { ::/96, ::ffff:0.0.0.0/96, 2002::/24, 2002:a00::/24, 2002:7f00::/24, 2002:a9fe::/32, 2002:ac10::/28, 2002:c0a8::/32, 2002:e000::/19 } reject with icmpv6 addr-unreachable
            jump filter_FORWARD_POLICIES
            reject with icmpx admin-prohibited
        }
    }
])

NFT_LIST_RULES([inet], [filter_PREROUTING], 0, [dnl
    table inet firewalld {
        chain filter_PREROUTING {
        }
    }
])

FWD_END_TEST([-e "/^ERROR: INVALID_VALUE:/d"])

FWD_START_TEST([rpfilter - config values])
AT_KEYWORDS(rpfilter RHEL-72937)
CHECK_NFTABLES_FIB()

dnl Verify all configuration values are accepted.
dnl
m4_foreach([VALUE], [[no], [yes], [false], [true], [strict], [loose]], [
    AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=VALUE/' ./firewalld.conf])
    FWD_RELOAD()
    m4_ifdef([TESTING_FIREWALL_OFFLINE_CMD], [], [
        DBUS_GET([config], [config], [string:"IPv6_rpfilter2"], 0, [dnl
            variant string "VALUE"
        ])
    ])
])

dnl And a bogus one.
AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=bogus/' ./firewalld.conf])
FWD_RELOAD()

FWD_END_TEST([-e "/^WARNING: IPv6_rpfilter 'bogus' is not valid/d"])

FWD_START_TEST([rpfilter - config values, -forward])
AT_KEYWORDS(rpfilter RHEL-72937)
CHECK_NFTABLES_FIB()
CHECK_NFTABLES_FIB_IN_FORWARD()

dnl These are not valid for iptables.
dnl
m4_foreach([VALUE], [[strict-forward], [loose-forward]], [
    AT_CHECK([sed -i 's/^IPv6_rpfilter.*/IPv6_rpfilter=VALUE/' ./firewalld.conf])
    m4_if(iptables, FIREWALL_BACKEND, [
        FWD_RELOAD(114, [ignore], [ignore])
    ], [
        FWD_RELOAD()
        m4_ifdef([TESTING_FIREWALL_OFFLINE_CMD], [], [
            DBUS_GET([config], [config], [string:"IPv6_rpfilter2"], 0, [dnl
                variant string "VALUE"
            ])
        ])
    ])
])

FWD_END_TEST([-e "/^ERROR: INVALID_VALUE:.*is incompatible with FirewallBackend=iptables."])
