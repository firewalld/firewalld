m4_if(iptables, FIREWALL_BACKEND, [], [ dnl NOT iptables
FWD_START_TEST([ipset defer native creation])
AT_KEYWORDS(ipset direct rhbz2122678)
CHECK_IPTABLES()

FWD_CHECK([--permanent --new-ipset foobar --type hash:net], 0, [ignore])
FWD_CHECK([--permanent --new-ipset foobar6 --type hash:net --family=inet6], 0, [ignore])
FWD_CHECK([--permanent --ipset foobar --add-entry 10.0.0.0/24], 0, [ignore])
FWD_CHECK([--permanent --ipset foobar6 --add-entry='[1234::4321]'], 0, [ignore])
FWD_RELOAD()

dnl should not exist until a --direct rule is used
IPSET_LIST_SET_ALWAYS([foobar], 1, [ignore], [ignore])
IPSET_LIST_SET_ALWAYS([foobar6], 1, [ignore], [ignore])
dnl but nftables sets should always exist (assuming FirewallBackend==nftables)
NFT_LIST_SET([foobar], 0, [dnl
table inet firewalld {
    set foobar {
        type ipv4_addr
        flags interval
        elements = { 10.0.0.0/24 }
    }
}
])

NFT_LIST_SET([foobar6], 0, [dnl
table inet firewalld {
    set foobar6 {
        type ipv6_addr
        flags interval
        elements = { [1234::4321] }
    }
}
])

dnl adding entries should update nftables, but not native ipset because no
dnl --direct rules
FWD_CHECK([            --ipset foobar --add-entry 10.1.1.0/24], 0, [ignore])
FWD_CHECK([            --ipset foobar6 --add-entry='[4321::1234]'], 0, [ignore])
IPSET_LIST_SET_ALWAYS([foobar], 1, [ignore], [ignore])
IPSET_LIST_SET_ALWAYS([foobar6], 1, [ignore], [ignore])
NFT_LIST_SET([foobar], 0, [dnl
table inet firewalld {
    set foobar {
        type ipv4_addr
        flags interval
        elements = { 10.0.0.0/24, 10.1.1.0/24 }
    }
}
])
NFT_LIST_SET([foobar6], 0, [dnl
table inet firewalld {
    set foobar6 {
        type ipv6_addr
        flags interval
        elements = { [1234::4321],
        [4321::1234] }
    }
}
])

dnl Doesn't matter if the --direct rule uses the ipset or not. firewalld does
dnl zero semantic checking of direct rules.
FWD_CHECK([--direct --add-rule ipv4 filter INPUT_direct 0 -j ACCEPT], 0, [ignore])
IPSET_LIST_SET_ALWAYS([foobar], 0, [dnl
Name: foobar
Type: hash:net
Members:
10.0.0.0/24
10.1.1.0/24
])

IF_HOST_SUPPORTS_IP6TABLES([
FWD_CHECK([--direct --add-rule ipv6 filter INPUT_direct 0 -j ACCEPT], 0, [ignore])
IPSET_LIST_SET_ALWAYS([foobar6], 0, [dnl
Name: foobar6
Type: hash:net
Members:
[1234::4321]
[4321::1234]
])
])

dnl verify new elements added if direct in use
FWD_CHECK([--ipset foobar --add-entry 10.2.2.0/24], 0, [ignore])
FWD_CHECK([--ipset foobar6 --add-entry='[3412::2143]'], 0, [ignore])
IPSET_LIST_SET_ALWAYS([foobar], 0, [dnl
Name: foobar
Type: hash:net
Members:
10.0.0.0/24
10.1.1.0/24
10.2.2.0/24
])
NFT_LIST_SET([foobar], 0, [dnl
table inet firewalld {
    set foobar {
        type ipv4_addr
        flags interval
        elements = { 10.0.0.0/24, 10.1.1.0/24,
        10.2.2.0/24 }
    }
}
])

IPSET_LIST_SET_ALWAYS([foobar6], 0, [dnl
Name: foobar6
Type: hash:net
Members:
[1234::4321]
[3412::2143]
[4321::1234]
])

NFT_LIST_SET([foobar6], 0, [dnl
table inet firewalld {
    set foobar6 {
        type ipv6_addr
        flags interval
        elements = { [1234::4321],
        [3412::2143],
        [4321::1234] }
    }
}
])


dnl make sure it gets cleaned up on a reload
FWD_CHECK([--permanent --delete-ipset foobar], 0, [ignore])
FWD_CHECK([--permanent --delete-ipset foobar6], 0, [ignore])
FWD_RELOAD()
IPSET_LIST_SET_ALWAYS([foobar], 1, [ignore], [ignore])
IPSET_LIST_SET_ALWAYS([foobar6], 1, [ignore], [ignore])
NFT_LIST_SET([foobar], 1, [ignore], [ignore])
NFT_LIST_SET([foobar6], 1, [ignore], [ignore])

dnl verify adding passthrough triggers creation
FWD_CHECK([--permanent --new-ipset foobar --type hash:net], 0, [ignore])
FWD_CHECK([--permanent --new-ipset foobar6 --type hash:net --family=inet6], 0, [ignore])
FWD_CHECK([--permanent --ipset foobar --add-entry 10.0.0.0/24], 0, [ignore])
FWD_CHECK([--permanent --ipset foobar6 --add-entry='[1234::4321]'], 0, [ignore])
FWD_RELOAD()
IPSET_LIST_SET_ALWAYS([foobar], 1, [ignore], [ignore])
IPSET_LIST_SET_ALWAYS([foobar6], 1, [ignore], [ignore])
FWD_CHECK([--direct --add-passthrough ipv4 -t filter -A INPUT -j ACCEPT], 0, [ignore])
IPSET_LIST_SET_ALWAYS([foobar], 0, [dnl
Name: foobar
Type: hash:net
Members:
10.0.0.0/24
])
IF_HOST_SUPPORTS_IP6TABLES([
FWD_CHECK([--direct --add-passthrough ipv6 -t filter -A INPUT -j ACCEPT], 0, [ignore])
IPSET_LIST_SET_ALWAYS([foobar6], 0, [dnl
Name: foobar6
Type: hash:net
Members:
[1234::4321]
])
])

dnl make sure it gets cleaned up on a reload
FWD_CHECK([--permanent --delete-ipset foobar], 0, [ignore])
FWD_CHECK([--permanent --delete-ipset foobar6], 0, [ignore])
FWD_RELOAD()
IPSET_LIST_SET_ALWAYS([foobar], 1, [ignore], [ignore])
IPSET_LIST_SET_ALWAYS([foobar6], 1, [ignore], [ignore])
NFT_LIST_SET([foobar], 1, [ignore], [ignore])
NFT_LIST_SET([foobar6], 1, [ignore], [ignore])

dnl verify adding chain triggers creation
FWD_CHECK([--permanent --new-ipset foobar --type hash:net], 0, [ignore])
FWD_CHECK([--permanent --new-ipset foobar6 --type hash:net --family=inet6], 0, [ignore])
FWD_CHECK([--permanent --ipset foobar --add-entry 10.0.0.0/24], 0, [ignore])
FWD_CHECK([--permanent --ipset foobar6 --add-entry='[1234::4321]'], 0, [ignore])
FWD_RELOAD()
IPSET_LIST_SET_ALWAYS([foobar], 1, [ignore], [ignore])
IPSET_LIST_SET_ALWAYS([foobar6], 1, [ignore], [ignore])
FWD_CHECK([--direct --add-chain ipv4 filter foobar], 0, [ignore])
IPSET_LIST_SET_ALWAYS([foobar], 0, [dnl
Name: foobar
Type: hash:net
Members:
10.0.0.0/24
])
IF_HOST_SUPPORTS_IP6TABLES([
FWD_CHECK([--direct --add-chain ipv6 filter foobar], 0, [ignore])
IPSET_LIST_SET_ALWAYS([foobar6], 0, [dnl
Name: foobar6
Type: hash:net
Members:
[1234::4321]
])
])

FWD_END_TEST()
])
